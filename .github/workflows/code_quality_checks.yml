---
name: Code Quality Checks

on:
  push:
    branches: [trunk]
  pull_request:
    branches: [trunk]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ['3.8', '3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v4
      - name: Get poetry cache directory
        run: |
          echo "POETRY-CACHE=$(poetry config cache-dir)" >> $GITHUB_ENV
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.POETRY-CACHE }}
          key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Check format with black
        run: poetry run black --check craterpy/
      - name: Check style with pylint
        run: poetry run pylint craterpy/
      - name: Unit & Coverage test with pytest
        run: poetry run pytest --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        